name: Bandit

on:
  pull_request:
    branches: [ "main" ]

jobs:
  bandit:
    permissions:
      contents: read
      pull-requests: write  # Ensure permissions to write comments on PRs

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit
        run: |
          bandit -r . -f json -o results.json || true

      - name: Print Bandit Results
        run: cat results.json

      - name: Check for Critical Vulnerabilities
        id: bandit-check
        run: |
          critical_issues=$(cat results.json | jq '.results[] | select(.issue_severity == "CRITICAL")')
          if [ -n "$critical_issues" ]; then
            echo "block=true" >> $GITHUB_ENV
          else
            echo "block=false" >> $GITHUB_ENV
          fi

      - name: Comment on PR
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const block = process.env.block;
            const { context, github } = require('@actions/github');
            if (block === 'true') {
              await github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'Block'
              });
              throw new Error('Blocking PR due to critical vulnerabilities');
            } else {
              await github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'Successful'
              });
            }

      - name: Merge Pull Request
        if: env.block == 'false'
        uses: actions/github-script@v6
        with:
          script: |
            const { context, github } = require('@actions/github');
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });
