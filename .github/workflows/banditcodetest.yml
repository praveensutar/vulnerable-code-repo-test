# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Bandit is a security linter designed to find common security issues in Python code.
# This action will run Bandit on your codebase.
# The results of the scan will be found under the Security tab of your repository.

# https://github.com/marketplace/actions/bandit-scan is ISC licensed, by abirismyname
# https://pypi.org/project/bandit/ is Apache v2.0 licensed, by PyCQA

name: Bandit Security Scan and PR Management

on:
  pull_request:
    branches: [ "main" ]

jobs:
  bandit:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      pull-requests: write # required to comment on or block PRs
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Bandit Scan
        id: bandit_scan
        uses: shundor/python-bandit-scan@9cc5aa4a006482b8a7f91134412df6772dbda22c
        with:
          exit_zero: true # Continue even if vulnerabilities are found
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required for PR interaction
          level: HIGH # Report only HIGH or CRITICAL severity issues
          confidence: HIGH # Report only HIGH confidence issues

      - name: Check for Critical or High Vulnerabilities
        id: check_vulns
        run: |
          # Check if Bandit found any HIGH or CRITICAL issues
          if grep -q '"issue_severity": "HIGH"' bandit-results.json || grep -q '"issue_severity": "CRITICAL"' bandit-results.json; then
            echo "Critical or High vulnerabilities found. Blocking PR."
            echo "::set-output name=block::true"
          else
            echo "No Critical or High vulnerabilities found. Auto-merging PR."
            echo "::set-output name=block::false"
          fi

      - name: Block PR if Vulnerabilities Found
        if: ${{ steps.check_vulns.outputs.block == 'true' }}
        run: |
          echo "Critical or High vulnerabilities found. Blocking PR."
          gh pr comment ${{ github.event.pull_request.number }} --body "Block"
          exit 1

      - name: Auto-Merge PR if No Vulnerabilities
        if: ${{ steps.check_vulns.outputs.block == 'false' }}
        run: |
          echo "No Critical or High vulnerabilities found. Auto-merging PR."
          gh pr merge ${{ github.event.pull_request.number }} --merge --body "Successful"
